{"version":3,"sources":["./src/app/order-stats/order-stats.page.html","./src/app/order-stats/order-stats.module.ts","./src/app/order-stats/order-stats.page.scss","./src/app/order-stats/order-stats.page.ts"],"names":[],"mappings":"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","file":"order-stats-order-stats-module-es5.js","sourcesContent":["module.exports = \"<ion-content color=\\\"primary\\\" style=\\\"background-color: var(--ion-color-primary);\\\">\\n\\n    <ion-toolbar color=\\\"primary\\\" style=\\\"margin-top: 10px;\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-icon style=\\\"width: 20px; height: 20px; margin-left: 5px;\\\" name=\\\"arrow-back\\\" (click)=\\\"home()\\\">\\n            </ion-icon>\\n        </ion-buttons>\\n        <ion-title text-center style=\\\"margin-right: 10px;\\\">\\n            Order for the past three months\\n        </ion-title>\\n    </ion-toolbar>\\n\\n\\n\\n\\n    <div class=\\\"card-main\\\">\\n        <ion-row style=\\\"margin-top: 0px;\\\">\\n            <ion-col [ngClass]=\\\"{activeMonth: month.status == 'active'}\\\" *ngFor=\\\"let month of last3Months; let i = index\\\" style=\\\"height: 70px; background-color: var(--ion-color-primary); margin: 15px; border-radius: 25px;\\\" (click)=\\\"filterByMonth(month.month, i)\\\">\\n                <div style=\\\"font-size: 12px; text-align: center; padding-top: 10px; margin-top: 15px;\\\">\\n                    {{month.month}}\\n                </div>\\n                <!-- <div style=\\\"font-size: 12px; text-align: center; padding-top: 10px;\\\">\\n                    Total orders\\n                </div>\\n                <div style=\\\"font-size: 12px; text-align: center; padding-top: 10px;\\\">\\n                    <div *ngIf=\\\"active === 'Deliveries'\\\">\\n                        {{ monthDeliveriesCount }}\\n                    </div>\\n                    <div *ngIf=\\\"active === 'PickPay'\\\">\\n                        {{ monthPickAndCollectCount }}\\n                    </div>\\n                </div> -->\\n            </ion-col>\\n        </ion-row>\\n\\n        \\n        \\n        <ion-segment (ionChange)=\\\"changeCategory($event)\\\" style=\\\"background-color: white; padding-top: 7px;\\\">\\n            <ion-segment-button value=\\\"delivery\\\" checked>\\n                <ion-badge class=\\\"ion-float-right\\\">{{Deliveredcount}}</ion-badge>\\n                <ion-label style=\\\"font-size: 12px; margin-top: 10px; margin-bottom: 2px;\\\">Deliveries</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"pick&pay\\\" >\\n                <ion-badge class=\\\"ion-float-right\\\">{{PickAndCollectPayCount}}</ion-badge>\\n                <ion-label style=\\\"font-size: 12px; margin-top: 10px; margin-bottom: 2px;\\\">Pay & Collect</ion-label>\\n            </ion-segment-button>\\n        </ion-segment>\\n\\n        <div *ngIf=\\\"loader\\\" text-center>\\n            <ion-spinner class=\\\"loader\\\" name=\\\"lines\\\" color=\\\"primary\\\"></ion-spinner>\\n        </div>\\n\\n\\n        <div *ngIf=\\\"active === 'Deliveries'\\\" style=\\\"padding-top: -10px; margin-bottom: 35px;margin-bottom: 60px;\\\">\\n            <div *ngIf=\\\"!loader\\\">\\n                \\n                <div *ngIf=\\\"deliveredOrders.length == 0\\\" style=\\\"padding-top: 50px; text-align: center;\\\">\\n                    <ion-label style=\\\"font-size: 13px; color: #737373;\\\">No Past Orders for this month</ion-label>\\n                </div> <br>\\n\\n                <ion-card padding style=\\\"background-color: white;\\\" *ngFor=\\\"let item of deliveredOrders\\\" (click)=\\\"viewOrder(item)\\\">\\n                    <div *ngIf=\\\"!item.show\\\">\\n                        <ion-icon name=\\\"funnel\\\" style=\\\"float: left;\\\" color=\\\"primary\\\">\\n                        </ion-icon>&nbsp;\\n                        <ion-label style=\\\"float: left; margin-left: 10px; color: var(--ion-color-danger);\\\" *ngIf=\\\"item.status == 'canceled'\\\">Canceled</ion-label>\\n                        <ion-label style=\\\"float: left; margin-left: 10px;\\\" color=\\\"success\\\" *ngIf=\\\"item.status == 'open'\\\">Open</ion-label>\\n                        <ion-label style=\\\"float: left; margin-left: 10px;\\\" color=\\\"success\\\" *ngIf=\\\"item.Complete == 'True'\\\">Complete</ion-label>\\n                        <ion-label style=\\\"float: left; margin-left: 10px;\\\" color=\\\"success\\\" *ngIf=\\\"item.status == 'Ready'\\\">Ready</ion-label>\\n                        <ion-label style=\\\"float: right;\\\" color=\\\"primary\\\">{{item.OrderID}}</ion-label><br><br>\\n                        <div style=\\\"text-align:start;\\\">\\n                            Order for <ion-label *ngFor=\\\"let item of item.products\\\">{{item.product}}, </ion-label> ...\\n                        </div>\\n                        <span style=\\\"float: left;margin-top: 10px;\\\">\\n                            {{item.username}}\\n                        </span>\\n                        <span style=\\\"float: right;margin-top: 10px;\\\">\\n                            {{item.Date.toDate()  | date: 'dd/MM/yyyy' }}\\n                        </span>\\n                        <span style=\\\"float: right;bottom:0;margin-top: 10px;\\\">\\n                            <span class=\\\"pick\\\" *ngIf=\\\"item.Delivery == 'Deliver it to me'\\\">Delivery To :\\n                                {{item.Location}} </span>\\n                            <span class=\\\"pick\\\" *ngIf=\\\"item.Delivery == 'I will pick it'\\\">Pick up :\\n                                {{item.pickHour}}:{{item.pickMins}}\\n                                {{item.pickDay}}</span>\\n                        </span>\\n                    </div>\\n                    <div *ngIf=\\\"item.show\\\">\\n                        <ion-card-title text-center style=\\\"font-size: 15px; color: var(--ion-color-primary);\\\">\\n                            <ion-icon name=\\\"arrow-dropup\\\" color=\\\"primary\\\" style=\\\"float: left;\\\" (click)=\\\"showLess(item)\\\">\\n                            </ion-icon>\\n                            {{item.OrderID}}<br>{{item.username}}\\n                            <ion-icon name=\\\"call\\\" color=\\\"success\\\" style=\\\"float: right;\\\" (click)=\\\"callCustomer()\\\">\\n                            </ion-icon>\\n                        </ion-card-title>\\n                        <ion-card-content>\\n                            <ion-row *ngFor=\\\"let item of item.products\\\">\\n                                <ion-col>\\n                                    {{item.product}}\\n                                </ion-col>\\n                                <ion-col>\\n                                    {{item.currentprice}}\\n                                </ion-col>\\n                                <ion-col>{{item.quantity}}</ion-col>\\n                            </ion-row>\\n                            <ion-row>\\n                                <ion-col>\\n                                    <span\\n                                        style=\\\"float: left;bottom:0;margin-top: 10px;color:var(--ion-color-primary);font-weight: bold;\\\"\\n                                        (click)=\\\"viewOrder(item)\\\">\\n                                        <ion-label>View more</ion-label>\\n                                    </span>\\n                                    <span style=\\\"float: right;bottom:0;margin-top: 10px;color:var(--ion-color-primary)\\\">\\n                                        <span class=\\\"pick\\\">{{item.Date.toDate()  | date: 'dd/MM/yyyy' }}</span>\\n                                    </span>\\n\\n                                </ion-col>\\n                            </ion-row>\\n                        </ion-card-content>\\n                    </div>\\n                </ion-card>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"active === 'PickPay'\\\" style=\\\"padding-top: -10px; margin-bottom: 60px;\\\">\\n            <div *ngIf=\\\"!loader\\\">\\n                \\n                <div *ngIf=\\\"pickAndCollectOrders.length == 0\\\" style=\\\"padding-top: 50px; text-align: center;\\\">\\n                    <ion-label style=\\\"font-size: 13px; color: #737373;\\\">No Past Orders for this month</ion-label>\\n                </div> <br>\\n\\n                <ion-card padding style=\\\"background-color: white;\\\" *ngFor=\\\"let item of pickAndCollectOrders\\\" (click)=\\\"viewOrder(item)\\\">\\n                    <div *ngIf=\\\"!item.show\\\">\\n                        <ion-icon name=\\\"funnel\\\" style=\\\"float: left;\\\" color=\\\"primary\\\">\\n                        </ion-icon>&nbsp;\\n                        <ion-label style=\\\"float: left; margin-left: 10px; color: var(--ion-color-danger);\\\" *ngIf=\\\"item.status == 'canceled'\\\">Canceled</ion-label>\\n                        <ion-label style=\\\"float: left; margin-left: 10px;\\\" color=\\\"success\\\" *ngIf=\\\"item.status == 'open'\\\">Open</ion-label>\\n                        <ion-label style=\\\"float: left; margin-left: 10px;\\\" color=\\\"success\\\" *ngIf=\\\"item.Complete == 'True'\\\">Complete</ion-label>\\n                        <ion-label style=\\\"float: left; margin-left: 10px;\\\" color=\\\"success\\\" *ngIf=\\\"item.status == 'Ready'\\\">Ready</ion-label>\\n                        <ion-label style=\\\"float: right;\\\" color=\\\"primary\\\">{{item.OrderID}}</ion-label><br><br>\\n                        <div style=\\\"text-align:start;\\\">\\n                            Order for <ion-label *ngFor=\\\"let item of item.products\\\">{{item.product}}, </ion-label> ...\\n                        </div>\\n                        <span style=\\\"float: left;margin-top: 10px;\\\">\\n                            {{item.username}}\\n                        </span>\\n                        <span style=\\\"float: right;margin-top: 10px;\\\">\\n                            {{item.Date.toDate()  | date: 'dd/MM/yyyy' }}\\n                        </span>\\n                        <span style=\\\"float: right;bottom:0;margin-top: 10px;\\\">\\n                            <span class=\\\"pick\\\" *ngIf=\\\"item.Delivery == 'Deliver it to me'\\\">Delivery To :\\n                                {{item.Location}} </span>\\n                            <span class=\\\"pick\\\" *ngIf=\\\"item.Delivery == 'I will pick it'\\\">Pick up :\\n                                {{item.pickHour}}:{{item.pickMins}}\\n                                {{item.pickDay}}</span>\\n                        </span>\\n                    </div>\\n                    <div *ngIf=\\\"item.show\\\">\\n                        <ion-card-title text-center style=\\\"font-size: 15px; color: var(--ion-color-primary);\\\">\\n                            <ion-icon name=\\\"arrow-dropup\\\" color=\\\"primary\\\" style=\\\"float: left;\\\" (click)=\\\"showLess(item)\\\">\\n                            </ion-icon>\\n                            {{item.OrderID}}<br>{{item.username}}\\n                            <ion-icon name=\\\"call\\\" color=\\\"success\\\" style=\\\"float: right;\\\" (click)=\\\"callCustomer()\\\">\\n                            </ion-icon>\\n                        </ion-card-title>\\n                        <ion-card-content>\\n                            <ion-row *ngFor=\\\"let item of item.products\\\">\\n                                <ion-col>\\n                                    {{item.product}}\\n                                </ion-col>\\n                                <ion-col>\\n                                    {{item.currentprice}}\\n                                </ion-col>\\n                                <ion-col>{{item.quantity}}</ion-col>\\n                            </ion-row>\\n                            <ion-row>\\n                                <ion-col>\\n                                    <span\\n                                        style=\\\"float: left;bottom:0;margin-top: 10px;color:var(--ion-color-primary);font-weight: bold;\\\"\\n                                        (click)=\\\"viewOrder(item)\\\">\\n                                        <ion-label>View more</ion-label>\\n                                    </span>\\n                                    <span style=\\\"float: right;bottom:0;margin-top: 10px;color:var(--ion-color-primary)\\\">\\n                                        <span class=\\\"pick\\\">{{item.Date.toDate()  | date: 'dd/MM/yyyy' }}</span>\\n                                    </span>\\n\\n                                </ion-col>\\n                            </ion-row>\\n                        </ion-card-content>\\n                    </div>\\n                </ion-card>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n\\n\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderStatsPage } from './order-stats.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderStatsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrderStatsPage]\n})\nexport class OrderStatsPageModule {}\n","module.exports = \"ion-card {\\n  border-radius: 15px;\\n  text-align: center;\\n  padding: 10px 20px 10px;\\n}\\n\\n.card-main {\\n  background-color: white;\\n  color: var(--ion-color-medium);\\n  background-color: white;\\n  border-radius: 20px 20px 0px 0px;\\n  width: 100%;\\n  position: fixed;\\n  bottom: 0px;\\n  top: 100px;\\n  overflow-y: scroll;\\n}\\n\\n.top {\\n  text-align: center;\\n}\\n\\n.top ion-label {\\n  font-weight: bolder;\\n  font-size: 2em;\\n}\\n\\n.top ion-text {\\n  font-weight: bold;\\n}\\n\\n.active {\\n  color: var(--ion-color-primary);\\n}\\n\\n.pick {\\n  color: var(--ion-color-success);\\n  text-transform: capitalize;\\n}\\n\\n.ready {\\n  background-color: #06b7f13d;\\n}\\n\\n.openOrder {\\n  position: fixed;\\n  bottom: 0px;\\n  overflow-y: scroll;\\n  width: 100%;\\n  top: 35%;\\n}\\n\\n.activeMonth {\\n  background-color: var(--ion-color-dark) !important;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .openOrder {\\n    top: 35%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGxhcmFzc2VtbWF4d2VsbC9EZXNrdG9wL0t3aWtfTWVyY2hhbnQvc3JjL2FwcC9vcmRlci1zdGF0cy9vcmRlci1zdGF0cy5wYWdlLnNjc3MiLCJzcmMvYXBwL29yZGVyLXN0YXRzL29yZGVyLXN0YXRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSx1QkFBQTtBQ0NKOztBRENBO0VBQ0ksdUJBQUE7RUFDQSw4QkFBQTtFQUNBLHVCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0Esa0JBQUE7QUNFSjs7QURBQTtFQUNJLGtCQUFBO0FDR0o7O0FERkk7RUFDSSxtQkFBQTtFQUNBLGNBQUE7QUNJUjs7QURGSTtFQUNJLGlCQUFBO0FDSVI7O0FEQUE7RUFDSSwrQkFBQTtBQ0dKOztBRERBO0VBQ0ksK0JBQUE7RUFDQSwwQkFBQTtBQ0lKOztBREZBO0VBQ0ksMkJBQUE7QUNLSjs7QURIQTtFQUNJLGVBQUE7RUFBZ0IsV0FBQTtFQUFZLGtCQUFBO0VBQW1CLFdBQUE7RUFBWSxRQUFBO0FDVS9EOztBRFBBO0VBQ0ksa0RBQUE7QUNVSjs7QUROQTtFQUNHO0lBQ0MsUUFBQTtFQ1NGO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9vcmRlci1zdGF0cy9vcmRlci1zdGF0cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZHtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweFxufVxuLmNhcmQtbWFpbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7ICAgICBcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwcHggMHB4O1xuICAgIHdpZHRoOiAxMDAlOyBcbiAgICBwb3NpdGlvbjogZml4ZWQ7IFxuICAgIGJvdHRvbTogMHB4OyBcbiAgICB0b3A6IDEwMHB4OyBcbiAgICBvdmVyZmxvdy15OnNjcm9sbDtcbn1cbi50b3B7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGlvbi1sYWJlbHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICAgICAgZm9udC1zaXplOiAyZW07XG4gICAgfVxuICAgIGlvbi10ZXh0e1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG5cbn1cbi5hY3RpdmV7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbn1cbi5waWNre1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyk7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG4ucmVhZHl7IFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwNmI3ZjEzZDtcbn1cbi5vcGVuT3JkZXJ7XG4gICAgcG9zaXRpb246IGZpeGVkO2JvdHRvbTogMHB4O292ZXJmbG93LXk6IHNjcm9sbDt3aWR0aDogMTAwJTt0b3A6IDM1JTtcbn1cblxuLmFjdGl2ZU1vbnRoIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFyaykhaW1wb3J0YW50O1xufVxuXG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzIwcHgpIHtcbiAgIC5vcGVuT3JkZXJ7XG4gICAgdG9wOiAzNSU7XG4gICB9XG4gIH0iLCJpb24tY2FyZCB7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMTBweCAyMHB4IDEwcHg7XG59XG5cbi5jYXJkLW1haW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMjBweCAyMHB4IDBweCAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMHB4O1xuICB0b3A6IDEwMHB4O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi50b3Age1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4udG9wIGlvbi1sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIGZvbnQtc2l6ZTogMmVtO1xufVxuLnRvcCBpb24tdGV4dCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYWN0aXZlIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbn1cblxuLnBpY2sge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MpO1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLnJlYWR5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA2YjdmMTNkO1xufVxuXG4ub3Blbk9yZGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDBweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAzNSU7XG59XG5cbi5hY3RpdmVNb250aCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYXJrKSAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMyMHB4KSB7XG4gIC5vcGVuT3JkZXIge1xuICAgIHRvcDogMzUlO1xuICB9XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FirestoreService } from '../services/firestore.service';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from '../database.service';\nimport { element } from 'protractor';\nimport { ModalController } from '@ionic/angular';\nimport { OrderPreviewPage } from '../order-preview/order-preview.page';\nimport { CallNumber } from '@ionic-native/call-number/ngx';\n\n\n@Component({\n  selector: 'app-order-stats',\n  templateUrl: './order-stats.page.html',\n  styleUrls: ['./order-stats.page.scss'],\n})\nexport class OrderStatsPage implements OnInit {\n   \n    \n    customPickerOptions: any;\n    // variables\n    top = 'past' ;\n    open = false ;\n    past = true ;\n    ready = true ;\n    canceled = false ;\n    shopname;\n    loader = true ;\n    CustomerNumber: any ;\n    date = new Date();\n    active = \"Deliveries\";\n    Deliveredcount = 0;\n    PickAndCollectPayCount = 0;\n    deliveredOrders = [];\n    pickAndCollectOrders = [];\n    monthDeliveriesCount = 0;\n    monthPickAndCollectCount = 0;\n    \n\n    monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"December\"\n    ];  \n    last3Months:any[] = []  \n\n    \n    constructor(\n        private service: FirestoreService,\n        private navCtrl: Router,\n        private db: DatabaseService,\n        private modal: ModalController,\n        private call: CallNumber\n    ) {\n        this.service.hiddenTabs = true ;\n\n    }\n\n    \n\n    ionViewWillEnter() {\n        this.shopname = this.db.getshopname();\n        // this.shopname = \"Kakila Organic\";\n        // console.log(\"====SHOP NAME ======\");\n        console.log(this.shopname);\n        this.getLast3Months();\n        this.getDeliveredOrders();\n        this.getPickAndCollectOrders(); \n    }\n\n\n    ngOnInit() { }\n\n    // GET THE LAST 3 MONTHS\n    getLast3Months() {\n        this.last3Months = [];\n        let today = new Date();\n        for (let i = 0; i < 3; i++) {\n            let month = this.monthNames[(today.getMonth() - (i+1))];\n            let monthObj:any = {month:month};\n            if(i==0) {\n                monthObj.status = 'active';\n            } else {\n                monthObj.status = 'inactive';\n            }\n            this.last3Months.push(monthObj);\n        }\n        console.log(\"======= LAST THREE MONTHS ====\");\n        console.log(this.last3Months);\n    }\n\n    // GET DELIVERED ORDERS\n    getDeliveredOrders() {\n        this.Deliveredcount = 0;\n        this.monthDeliveriesCount = 0;\n        this.service.getDeliveriesOrders(this.shopname).valueChanges().subscribe(res => {\n            console.log(\"======= DELIVERIES ORDERS ====\");\n\n            this.deliveredOrders = res.filter(item => {\n                console.log(\"DATE => \"+this.date.getMonth());\n                let final_data = item.Date.toDate().getMonth()===this.date.getMonth()-1;\n                if(final_data) {\n                    this.Deliveredcount ++;\n                    this.monthDeliveriesCount ++;\n                }\n                return final_data\n            });\n\n        })\n        this.loader = false ;\n    }\n\n    // GET PICK AND COLLECT ORDERS\n    getPickAndCollectOrders() {\n        this.PickAndCollectPayCount  = 0;\n        this.service.getPickAndCollectOrders(this.shopname).valueChanges().subscribe(res => {\n            console.log(\"======= PICK AND COLLECT ORDERS ====\");\n            this.pickAndCollectOrders = res.filter(item => {\n                console.log(\"DATE => \"+this.date.getMonth());\n                let final_data = item.Date.toDate().getMonth()===this.date.getMonth()-1;\n                if(final_data) {\n                    this.PickAndCollectPayCount ++;\n                }\n                return final_data\n            });\n\n        })\n        this.loader = false ;\n    }\n\n    // FILTER DERLIVERED ORDERS BY MONTH\n    filterByMonth(month, i) {\n        // this.last3Months.reverse();\n        this.last3Months.forEach((newMonth, index) => {\n            if(i == index) {\n                newMonth.status = 'active';\n            } else {\n                newMonth.status = 'inactive';\n            }\n        })\n        this.Deliveredcount = 0;\n        this.PickAndCollectPayCount = 0;\n        console.log(\"==== MONTH ====\");\n        console.log(month);\n        let monthNumber = this.monthNames.indexOf(month);\n        console.log(monthNumber);\n        // GET DELIVERIES BY MONTH\n        this.service.getDeliveriesOrders(this.shopname).valueChanges().subscribe(res => {\n            this.deliveredOrders = res.filter(item => {\n                let final_deliveries_data = item.Date.toDate().getMonth()===monthNumber;\n                if(final_deliveries_data) {\n                    this.Deliveredcount ++;\n                }\n                return final_deliveries_data\n            });\n        })\n\n        // GET PICK AND COLLECT BY MONTH\n        this.service.getPickAndCollectOrders(this.shopname).valueChanges().subscribe(res => {\n            this.pickAndCollectOrders = res.filter(item => {\n                let final_pick_and_collect_data = item.Date.toDate().getMonth()===monthNumber;\n                if(final_pick_and_collect_data) {\n                    this.PickAndCollectPayCount ++;\n                }\n                return final_pick_and_collect_data\n            });\n        })\n        this.loader = false ;\n    }\n\n    getMonthDeliveriesCount(month) {\n        this.monthDeliveriesCount = 0;\n        console.log(\"=== MONTH DELIVERIES COUNT YES ===\");\n        let monthNumber = this.monthNames.indexOf(month);\n        console.log(monthNumber);\n        return this.monthDeliveriesCount;\n    }\n\n\n    changeCategory(event) {\n        if (event.detail.value === 'delivery') {\n            this.active = \"Deliveries\";\n        }\n        if (event.detail.value === \"pick&pay\") {\n            this.active = \"PickPay\";\n        }\n    }\n\n\n    home() {\n        this.service.hiddenTabs = false ;\n        this.navCtrl.navigate(['tabs/dashboard']);\n    }\n\n\n    showMore(item) {\n        item.show = true ;\n        this.service.getNumber(item.userID).subscribe(res => {\n        this.CustomerNumber = res.phone ;\n        console.log(\"number\",this.CustomerNumber);\n        });\n    }\n\n\n    showLess(item) {\n        item.show = false ;\n        console.log('less');\n    }\n\n\n    async viewOrder(item) {\n        console.log(\"====== VIEW MORE =====\");\n        console.log(item);\n        // item.phone = this.CustomerNumber ;\n        const mod = await this.modal.create({\n            component: OrderPreviewPage,\n            componentProps:\n            item\n          \n        });\n        await mod.present();\n    }\n\n    \n    callCustomer(){\n        let num = this.CustomerNumber.toString();\n        this.call.callNumber(num, true)\n        .then(res => console.log('Launched dialer!', res))\n        .catch(err => console.log('Error launching dialer', err));\n    }\n}\n"],"sourceRoot":""}