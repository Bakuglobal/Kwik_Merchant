{"version":3,"sources":["./src/app/order-stats/order-stats.page.html","./src/app/order-stats/order-stats.module.ts","./src/app/order-stats/order-stats.page.scss","./src/app/order-stats/order-stats.page.ts"],"names":[],"mappings":"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","file":"order-stats-order-stats-module-es5.js","sourcesContent":["module.exports = \"<ion-content color=\\\"light\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\" padding>\\n      <ion-icon color=\\\"\\\" name=\\\"home\\\" (click)=\\\"home()\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-title color=\\\"\\\">Order Summary</ion-title>\\n  </ion-toolbar>\\n\\n  <ion-card style=\\\"background-color: white;\\\">\\n    <ion-row>\\n      <ion-col class=\\\"top\\\" [ngClass]=\\\"{'active': top == 'past'}\\\" (click)=\\\"pastOrders()\\\">\\n        <ion-label>{{TotalPastOrders}}</ion-label><br>\\n        <ion-text>Past Orders</ion-text>\\n      </ion-col>\\n      <ion-col class=\\\"top\\\" [ngClass]=\\\"{'active': top == 'open'}\\\" (click)=\\\"openOrders()\\\">\\n        <ion-label>{{TotalOpenOrders}}</ion-label><br>\\n        <ion-text>Open Orders</ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card>\\n  <ion-segment (ionChange)=\\\"DaysegmentChanged($event)\\\" scrollable *ngIf=\\\"open\\\" style=\\\"background-color: white;\\\">\\n    <ion-segment-button value=\\\"Today\\\" checked>\\n      <ion-label>Today</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Mon\\\">\\n      <ion-label>Mon</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Tue\\\">\\n      <ion-label>Tue</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Wed\\\">\\n      <ion-label>Wed</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Thur\\\">\\n      <ion-label>Thur</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Fri\\\">\\n      <ion-label>Fri</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Sat\\\">\\n      <ion-label>Sat</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Sun\\\">\\n      <ion-label>Sun</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <ion-segment (ionChange)=\\\"TopsegmentChanged($event)\\\" *ngIf=\\\"past\\\" style=\\\"background-color: white;\\\">\\n    <ion-segment-button value=\\\"canceled\\\">\\n      <ion-label>Canceled Orders</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"ready\\\" checked>\\n      <ion-label>Completed Orders</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <div *ngIf=\\\"ready;open\\\">\\n    <div *ngIf=\\\"loader\\\" text-center style=\\\"padding-top: 50px;text-align: center;\\\">\\n      <ion-spinner class=\\\"loader\\\" name=\\\"lines\\\" color=\\\"primary\\\"></ion-spinner>\\n    </div>\\n    <div *ngIf=\\\"ReadyOrders.length == 0\\\" style=\\\"padding-top: 50px;text-align: center;\\\">\\n      <ion-label color=\\\"medium\\\">No Order is due Today</ion-label>\\n    </div>\\n    <ion-card padding style=\\\"background-color: white;\\\" *ngFor=\\\"let item of ReadyOrders\\\">\\n      <div *ngIf=\\\"!item.show\\\">\\n        <ion-icon name=\\\"funnel\\\" (click)=\\\"showMore(item)\\\" style=\\\"float: left;\\\" color=\\\"primary\\\"></ion-icon>\\n        <ion-label style=\\\"float: right;\\\" color=\\\"primary\\\">{{item.OrderID}}</ion-label><br><br>\\n        <div style=\\\"text-align:start;\\\">\\n          Order for <ion-label *ngFor=\\\"let item of item.products\\\">{{item.product}}, </ion-label> ...\\n        </div>\\n        <span style=\\\"float: left;margin-top: 10px;\\\">\\n          {{item.username}}\\n        </span>\\n        <span style=\\\"float: right;bottom:0;margin-top: 10px;\\\">\\n          <span class=\\\"pick\\\">{{item.Date.toDate()  | date: 'dd/MM/yyyy' }}</span>\\n        </span>\\n      </div>\\n      <div *ngIf=\\\"item.show\\\">\\n\\n        <ion-card-title text-center (click)=\\\"showLess(item)\\\">\\n          <ion-icon name=\\\"arrow-dropup\\\" color=\\\"primary\\\" style=\\\"float: left;\\\"></ion-icon>\\n          {{item.OrderID}}<br>{{item.username}}\\n        </ion-card-title>\\n        <ion-card-content>\\n          <ion-row *ngFor=\\\"let item of item.products\\\">\\n            <ion-col>\\n              {{item.product}}\\n            </ion-col>\\n            <ion-col>\\n              {{item.currentprice}}\\n            </ion-col>\\n            <ion-col>{{item.quantity}}</ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <span style=\\\"float: left;bottom:0;margin-top: 10px;color:var(--ion-color-primary);font-weight: bold;\\\"\\n                (click)=\\\"viewOrder(item)\\\">\\n                <ion-label>View more ...</ion-label>\\n              </span>\\n              <span style=\\\"float: right;bottom:0;margin-top: 10px;color:var(--ion-color-primary)\\\">\\n                <span class=\\\"pick\\\">{{item.Date.toDate()  | date: 'dd/MM/yyyy' }}</span>\\n              </span>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </div>\\n    </ion-card>\\n  </div>\\n  <div *ngIf=\\\"canceled;open\\\">\\n    <div *ngIf=\\\"loader\\\" text-center style=\\\"padding-top: 50px;text-align: center;\\\">\\n      <ion-spinner class=\\\"loader\\\" name=\\\"lines\\\" color=\\\"primary\\\"></ion-spinner>\\n    </div>\\n    <div *ngIf=\\\"CanceledOrders.length == 0\\\" style=\\\"padding-top: 50px;text-align: center;\\\">\\n      <ion-label color=\\\"medium\\\">No Order is due Today</ion-label>\\n    </div>\\n    <ion-card padding style=\\\"background-color: white;\\\" *ngFor=\\\"let item of CanceledOrders\\\">\\n      <div *ngIf=\\\"!item.show\\\">\\n        <ion-icon name=\\\"funnel\\\" (click)=\\\"showMore(item)\\\" style=\\\"float: left;\\\" color=\\\"primary\\\"></ion-icon>\\n        <ion-label style=\\\"float: right;\\\" color=\\\"primary\\\">{{item.OrderID}}</ion-label><br><br>\\n        <div style=\\\"text-align:start;\\\">\\n          Order for <ion-label *ngFor=\\\"let item of item.products\\\">{{item.product}}, </ion-label> ...\\n        </div>\\n        <span style=\\\"float: left;margin-top: 10px;\\\">\\n          {{item.username}}\\n        </span>\\n        <span style=\\\"float: right;bottom:0;margin-top: 10px;\\\">\\n          <span class=\\\"pick\\\">{{item.Date.toDate()  | date: 'dd/MM/yyyy' }}</span>\\n        </span>\\n      </div>\\n      <div *ngIf=\\\"item.show\\\">\\n\\n        <ion-card-title text-center (click)=\\\"showLess(item)\\\">\\n          <ion-icon name=\\\"arrow-dropup\\\" color=\\\"primary\\\" style=\\\"float: left;\\\"></ion-icon>\\n          {{item.OrderID}}<br>{{item.username}}\\n        </ion-card-title>\\n        <ion-card-content>\\n          <ion-row *ngFor=\\\"let item of item.products\\\">\\n            <ion-col>\\n              {{item.product}}\\n            </ion-col>\\n            <ion-col>\\n              {{item.currentprice}}\\n            </ion-col>\\n            <ion-col>{{item.quantity}}</ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <span style=\\\"float: left;bottom:0;margin-top: 10px;color:var(--ion-color-primary);font-weight: bold;\\\"\\n                (click)=\\\"viewOrder(item)\\\">\\n                <ion-label>View more ...</ion-label>\\n              </span>\\n              <span style=\\\"float: right;bottom:0;margin-top: 10px;color:var(--ion-color-primary)\\\">\\n                <span class=\\\"pick\\\">{{item.Date.toDate()  | date: 'dd/MM/yyyy' }}</span>\\n              </span>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </div>\\n    </ion-card>\\n  </div>\\n  <div *ngIf=\\\"open\\\">\\n    <div *ngIf=\\\"loader\\\" text-center style=\\\"padding-top: 50px;text-align: center;\\\">\\n      <ion-spinner class=\\\"loader\\\" name=\\\"lines\\\" color=\\\"primary\\\"></ion-spinner>\\n    </div>\\n    <div *ngIf=\\\"myOpenOrders.length == 0\\\" style=\\\"padding-top: 50px;text-align: center;\\\">\\n      <ion-label color=\\\"medium\\\">No Order is due Today</ion-label>\\n    </div>\\n    <ion-card padding style=\\\"background-color: white;\\\" *ngFor=\\\"let item of myOpenOrders\\\">\\n      <div *ngIf=\\\"!item.show\\\">\\n        <ion-icon name=\\\"funnel\\\" (click)=\\\"showMore(item)\\\" style=\\\"float: left;\\\" color=\\\"primary\\\"></ion-icon>\\n        <ion-label style=\\\"float: right;\\\" color=\\\"primary\\\">{{item.OrderID}}</ion-label><br><br>\\n        <div style=\\\"text-align:start;\\\">\\n          Order for <ion-label *ngFor=\\\"let item of item.products\\\">{{item.product}}, </ion-label> ...\\n        </div>\\n        <span style=\\\"float: left;margin-top: 10px;\\\">\\n          {{item.username}}\\n        </span>\\n        <span style=\\\"float: right;bottom:0;margin-top: 10px;\\\">\\n          <span class=\\\"pick\\\">Pick up : {{item.pickHour}}:{{item.pickMins}} {{item.pickDay}}</span>\\n        </span>\\n      </div>\\n      <div *ngIf=\\\"item.show\\\">\\n\\n        <ion-card-title text-center (click)=\\\"showLess(item)\\\">\\n          <ion-icon name=\\\"arrow-dropup\\\" color=\\\"primary\\\" style=\\\"float: left;\\\"></ion-icon>\\n          {{item.OrderID}}<br>{{item.username}}\\n        </ion-card-title>\\n        <ion-card-content>\\n          <ion-row *ngFor=\\\"let item of item.products\\\">\\n            <ion-col>\\n              {{item.product}}\\n            </ion-col>\\n            <ion-col>\\n              {{item.currentprice}}\\n            </ion-col>\\n            <ion-col>{{item.quantity}}</ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col>\\n              <span style=\\\"float: left;bottom:0;margin-top: 10px;color:var(--ion-color-primary);font-weight: bold;\\\"\\n                (click)=\\\"viewOrder(item)\\\">\\n                <ion-label>View more ...</ion-label>\\n              </span>\\n              <span style=\\\"float: right;bottom:0;margin-top: 10px;color:var(--ion-color-primary)\\\">\\n                <span class=\\\"pick\\\">{{item.Date.toDate()  | date: 'dd/MM/yyyy' }}</span>\\n              </span>\\n             \\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </div>\\n    </ion-card>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderStatsPage } from './order-stats.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderStatsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrderStatsPage]\n})\nexport class OrderStatsPageModule {}\n","module.exports = \"ion-card {\\n  border-radius: 15px;\\n  text-align: center;\\n  padding: 10px 20px 10px;\\n}\\n\\n.top {\\n  text-align: center;\\n}\\n\\n.top ion-label {\\n  font-weight: bolder;\\n  font-size: 2em;\\n}\\n\\n.top ion-text {\\n  font-weight: bold;\\n}\\n\\n.active {\\n  color: var(--ion-color-primary);\\n}\\n\\n.pick {\\n  color: var(--ion-color-success);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9EZXNrdG9wL0t3aWtfTWVyY2hhbnQvc3JjL2FwcC9vcmRlci1zdGF0cy9vcmRlci1zdGF0cy5wYWdlLnNjc3MiLCJzcmMvYXBwL29yZGVyLXN0YXRzL29yZGVyLXN0YXRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0Esa0JBQUE7RUFFQSx1QkFBQTtBQ0FKOztBREdBO0VBQ0ksa0JBQUE7QUNBSjs7QURDSTtFQUNJLG1CQUFBO0VBQ0EsY0FBQTtBQ0NSOztBRENJO0VBQ0ksaUJBQUE7QUNDUjs7QURHQTtFQUNJLCtCQUFBO0FDQUo7O0FERUE7RUFDSSwrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvb3JkZXItc3RhdHMvb3JkZXItc3RhdHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmR7XG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIFxuICAgIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4XG4gICAgXG59XG4udG9we1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBpb24tbGFiZWx7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgIH1cbiAgICBpb24tdGV4dHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuXG59XG4uYWN0aXZle1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG59XG4ucGlja3tcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MpO1xufVxuIiwiaW9uLWNhcmQge1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4O1xufVxuXG4udG9wIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnRvcCBpb24tbGFiZWwge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICBmb250LXNpemU6IDJlbTtcbn1cbi50b3AgaW9uLXRleHQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmFjdGl2ZSB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG59XG5cbi5waWNrIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zdWNjZXNzKTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FirestoreService } from '../services/firestore.service';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from '../database.service';\nimport { element } from 'protractor';\nimport { ModalController } from '@ionic/angular';\nimport { OrderPreviewPage } from '../order-preview/order-preview.page';\n\n@Component({\n  selector: 'app-order-stats',\n  templateUrl: './order-stats.page.html',\n  styleUrls: ['./order-stats.page.scss'],\n})\nexport class OrderStatsPage implements OnInit {\n\n\n  // variables\n  top = 'past' ;\n  open = false ;\n  past = true ;\n  ready = true ;\n  canceled = false ;\n  shopname;\n  myOpenOrders = [] ;\n  CanceledOrders = [] ;\n  ReadyOrders = [] ;\n  OpenOrderForFilter = [] ;\n  TotalPastOrders = 0 ;\n  TotalOpenOrders = 0 ;\n  loader = true ;\n\n\n  constructor(\n    private service: FirestoreService,\n    private navCtrl: Router,\n    private db: DatabaseService,\n    private modal: ModalController\n  ) {\n    this.service.hiddenTabs = true ;\n  }\n  ionViewWillEnter() {\n    this.shopname = this.db.getshopname();\n    console.log(this.shopname);\n    this.getOpenOrders();\n    this.getcanceledOrders();\n    this.getreadyOders();\n  }\n  ngOnInit() {\n  }\n\n  home() {\n    this.service.hiddenTabs = false ;\n    this.navCtrl.navigate(['tabs/dashboard']);\n\n  }\n\n\n  DaysegmentChanged(event) {\n    // console.log(event.detail.value);\n    switch (event.detail.value) {\n      case 'Today':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      case 'Mon':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      case 'Tue':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      case 'Wed':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      case 'Thur':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      case 'Fri':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      case 'Sat':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      case 'Sun':\n        this.filterOpenOders(event.detail.value);\n        console.log(event.detail.value);\n        break;\n      default:\n        break;\n    }\n\n  }\n  TopsegmentChanged(event) {\n    // console.log(event);\n    switch (event.detail.value) {\n      case 'canceled':\n        this.past = true ;\n        this.ready = false ;\n        this.canceled = true ;\n        console.log(event.detail.value);\n        break;\n      case 'ready':\n        this.past = true ;\n        this.ready = true ;\n        this.canceled = false ;\n        console.log(event.detail.value);\n        break;\n      default:\n        break;\n    }\n  }\n  openOrders() {\n    if (this.top !== 'open') {\n      this.top = 'open' ;\n      this.open = true ;\n      this.past = false ;\n      this.canceled = false ;\n      this.ready = false ;\n      this.filterOpenOders('Today');\n    }\n  }\n  pastOrders() {\n    if (this.top !== 'past') {\n      this.top = 'past' ;\n      this.open = false ;\n      this.past = true ;\n      this.ready = true ;\n    }\n  }\n  // get open orders\n  getOpenOrders() {\n    this.service.getOpenOders(this.shopname).valueChanges().subscribe(res => {\n      this.myOpenOrders = res ;\n      this.OpenOrderForFilter = res ;\n      this.TotalOpenOrders = this.myOpenOrders.length ;\n      this.loader = false ;\n      console.log('open orders' + this.myOpenOrders);\n    });\n  }\n  // get canceled orders\n  getcanceledOrders() {\n    this.service.getCanceledOrders(this.shopname).valueChanges().subscribe(res => {\n      this.CanceledOrders = res ;\n      this.loader = false ;\n      console.log('canceled orders' + this.CanceledOrders);\n    });\n  }\n  // get Ready orders\n  getreadyOders() {\n    this.service.getReadyOrders(this.shopname).valueChanges().subscribe(res => {\n      this.ReadyOrders = res ;\n      this.loader = false ;\n      this.TotalPastOrders = this.ReadyOrders.length + this.CanceledOrders.length ;\n      console.log('ready orders' + this.ReadyOrders);\n    });\n  }\n  // filter open orders by day of pick up\n  filterOpenOders(event) {\n    const unfiltered = this.OpenOrderForFilter ;\n    const filtered = [] ;\n    // tslint:disable-next-line: no-shadowed-variable\n    unfiltered.forEach( element => {\n      if (element.pickDay === event) {\n         filtered.push(element);\n      } else {\n        return ;\n      }\n      return ;\n    });\n    this.loader = false ;\n    this.myOpenOrders = filtered ;\n  }\n  showMore(item) {\n    item.show = true ;\n  }\n  showLess(item) {\n    item.show = false ;\n    console.log('less');\n  }\n  async viewOrder(item) {\n    const mod = await this.modal.create({\n      component: OrderPreviewPage,\n      componentProps: item\n    });\n    console.log(item);\n    await mod.present();\n  }\n}\n"],"sourceRoot":""}