{"version":3,"sources":["./src/app/dashboard/dashboard.page.html","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dashboard.page.scss","./src/app/dashboard/dashboard.page.ts","./src/app/pipes/date-ago.pipe.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-es5.js","sourcesContent":["module.exports = \"\\n<ion-content color=\\\"primary\\\" [scrollEvents]=\\\"true\\\" (ionScroll)=\\\"onScroll($event)\\\">\\n    <div class=\\\"top\\\">\\n        <ion-toolbar color=\\\"primary\\\">\\n            <ion-buttons slot=\\\"start\\\">\\n                <ion-menu-button></ion-menu-button>\\n            </ion-buttons>\\n            <ion-buttons slot=\\\"end\\\">\\n                <ion-icon style=\\\"width: 23px; height: 23px; margin-top: 10px; margin-right: 10px;\\\" name=\\\"search\\\" size=\\\"small\\\" (click)=\\\"showsearch()\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-searchbar mode=\\\"ios\\\" animated placeholder=\\\"Enter OrderID\\\" *ngIf=\\\"search\\\" [(ngModel)]=\\\"searchTerm\\\" style=\\\"margin-top: 10px; font-size: 13px;\\\"\\n                (ionChange)=\\\"setFilteredItems()\\\"></ion-searchbar>\\n            <ion-title text-center *ngIf=\\\"!search\\\">Dashboard</ion-title>\\n        </ion-toolbar>\\n        <div>\\n            <ion-row>\\n                <ion-col size=\\\"4\\\" class=\\\"main-nav\\\" tappable (click)=\\\"stock()\\\">\\n                <ion-card class=\\\"card\\\">\\n                    <ion-card-title>\\n                    <ion-icon color=\\\"primary\\\" name=\\\"pricetags\\\"></ion-icon>\\n                    </ion-card-title>\\n                    <label text-center>Stock</label>\\n                </ion-card>\\n                </ion-col>\\n                <ion-col size=\\\"4\\\" class=\\\"main-nav\\\" tappable (click)=\\\"sales()\\\">\\n                <ion-card class=\\\"card\\\">\\n                    <ion-card-title>\\n                    <ion-icon color=\\\"primary\\\" name=\\\"pulse\\\"></ion-icon>\\n                    </ion-card-title>\\n                    <label text-center>Sales</label>\\n                </ion-card>\\n                </ion-col>\\n                <ion-col size=\\\"4\\\" class=\\\"main-nav\\\" tappable (click)=\\\"orders()\\\">\\n                <ion-card class=\\\"card\\\">\\n                    <ion-card-title>\\n                    <ion-icon color=\\\"primary\\\" name=\\\"podium\\\"></ion-icon>\\n                    </ion-card-title>\\n                    <label text-center>Orders</label>\\n                </ion-card>\\n                </ion-col>\\n            </ion-row>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"body\\\" style=\\\"background-color: white;\\\">\\n        <div>\\n            <div style=\\\"width: 100%; color: #737373; padding-left: 15px; padding-right: 15px; padding-top: 10px;\\\">\\n                <div style=\\\"margin-top: 5px; margin-bottom: 15px; font-size: 15px;\\\">\\n                    <div style=\\\"margin-left: 5px\\\"><b>Shop Orders for </b> <span style=\\\"color: var(--ion-color-primary);font-weight: bold;text-transform: capitalize;\\\">{{currentMonth}}</span> </div>\\n                    <div  style=\\\"color: var(--ion-color-warning); position: absolute; float: right; right: 13px; margin-top: -29px;\\\" (click)=\\\"allOrders()\\\">\\n                      <ion-button fill=\\\"clear\\\"[ngClass]=\\\"{'active': allOrd}\\\" shape=\\\"round\\\">All orders</ion-button> \\n                    </div>\\n                </div>\\n                <ion-slides pager=\\\"false\\\" [options]=\\\"slideOptions\\\" #slide>\\n                    <ion-slide *ngFor=\\\"let item of daysOfCurrentMonth\\\" [ngClass]=\\\"{active: item.day === currentDay && !allOrd}\\\" (click)=\\\"formatDate(item.day)\\\">\\n                        <div style=\\\"padding-bottom: 7px; padding-top: 7px; margin-bottom: 2px;\\\">\\n                            <!-- <ion-label style=\\\"font-size: .5em;\\\">{{ currentMonth }}, {{ currentYear }}</ion-label><br> -->\\n\\n                            <ion-label style=\\\"font-size: 13px; margin-bottom: 7px;\\\">{{ getDay(currentYear,date.getMonth(),item.day)}}</ion-label><br>\\n\\n                            <ion-label style=\\\"font-size: 13px; margin-bottom: 10px; margin-top: 5px;\\\">{{ item.day }}</ion-label><br>\\n                        </div>\\n                    </ion-slide>\\n                </ion-slides>\\n            </div>\\n\\n\\n\\n            <!-- <ion-item color=\\\"light\\\">\\n                <div no-padding style=\\\"font-size: 14px; width: 100%;\\\">\\n                    <ion-label no-padding style=\\\"font-size: 14px; color: #737373;\\\">Click to filter by date &nbsp;&nbsp;&nbsp;</ion-label>\\n                    <ion-datetime no-padding [pickerOptions]=\\\"customPickerOptions\\\" style=\\\"color: #737373; float: right; margin-top: -15px;\\\" displayFormat=\\\"DDDD\\\" [max]=\\\"\\\"\\n                        value=\\\"{{ date }}\\\">\\n                    </ion-datetime>\\n                </div>\\n            </ion-item> -->\\n        </div>\\n\\n        <ion-segment (ionChange)=\\\"changeCategory($event)\\\" style=\\\"background-color: white; padding-top: 7px;\\\">\\n            <ion-segment-button value=\\\"delivery\\\" checked>\\n                <ion-badge class=\\\"ion-float-right\\\">{{Deliverycount}}</ion-badge>\\n                <ion-label style=\\\"font-size: 12px; margin-top: 10px; margin-bottom: 2px;\\\">Deliveries</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button value=\\\"pick&pay\\\" >\\n                <ion-badge class=\\\"ion-float-right\\\">{{PickPayCount}}</ion-badge>\\n                <ion-label style=\\\"font-size: 12px; margin-top: 10px; margin-bottom: 2px;\\\">Pay & Collect</ion-label>\\n            </ion-segment-button>\\n        </ion-segment>\\n\\n        <div *ngIf=\\\"loader\\\" text-center>\\n            <ion-spinner class=\\\"loader\\\" name=\\\"lines\\\" color=\\\"primary\\\"></ion-spinner>\\n        </div>\\n\\n        <div *ngIf=\\\"Myorders.length == 0\\\" style=\\\"padding-top: 50px; text-align: center;\\\">\\n            <ion-label style=\\\"font-size: 13px; color: #737373;\\\">No Pending Orders</ion-label>\\n        </div> <br>\\n\\n        <div *ngIf=\\\"active === 'Deliveries'\\\" style=\\\"padding-top: -10px; margin-bottom: 35px;margin-bottom: 60px;\\\">\\n            <div *ngIf=\\\"!loader\\\">\\n                <ion-card padding *ngFor=\\\"let item of DeliveryOrders \\\" (click)=\\\"openOrder(item)\\\" [ngClass]=\\\"{'ready': item.status == 'Ready','complete': item.status == 'complete'}\\\">\\n                    <ion-icon name=\\\"funnel\\\" style=\\\"float: left;\\\" color=\\\"primary\\\"></ion-icon>&nbsp;\\n                    <ion-label color=\\\"success\\\" style=\\\"font-size: 13px;\\\" *ngIf=\\\"item.status == 'Ready'\\\">Ready</ion-label>\\n                    <ion-label color=\\\"warning\\\" style=\\\"font-size: 13px;\\\" *ngIf=\\\"item.status == 'open'\\\">Open</ion-label>\\n                    <ion-label color=\\\"danger\\\" style=\\\"font-size: 13px;\\\" *ngIf=\\\"item.status == 'canceled'\\\">Canceled</ion-label>\\n                    <ion-label style=\\\"float: right; font-size: 13px;\\\" color=\\\"primary\\\">{{item.OrderID}}</ion-label><br><br>\\n                    <div style=\\\"text-align:start; font-size: 13px;\\\">\\n                        Order for: <ion-label style=\\\"font-size: 13px;\\\" *ngFor=\\\"let item of item.products\\\"><b>{{item.product}}</b></ion-label> ...\\n                    </div>\\n                    <span style=\\\"float: left;margin-top: 20px; font-size: 13px;\\\">\\n                        <b>{{item.username}}</b>\\n                    </span>\\n                    <span style=\\\"float: right; bottom:0; margin-top: 20px; font-size: 13px;\\\">\\n                        <span style=\\\"font-size: 13px;\\\" class=\\\"pick\\\">{{ item.Date.toDate() | dateAgo }} </span>\\n                    </span>\\n                </ion-card>\\n            </div>\\n        </div> \\n\\n\\n        <div *ngIf=\\\"active === 'PickPay'\\\" style=\\\"padding-top: -10px; margin-bottom: 60px;\\\">\\n            <div *ngIf=\\\"!loader\\\">\\n                <ion-card padding *ngFor=\\\"let item of PickPayOrders \\\" (click)=\\\"openOrder(item)\\\"\\n                [ngClass]=\\\"{'ready': item.status == 'Ready'}\\\">\\n                <ion-icon name=\\\"funnel\\\" style=\\\"float: left;\\\" color=\\\"primary\\\"></ion-icon>&nbsp;\\n                <ion-label color=\\\"success\\\" style=\\\"font-size: 13px;\\\" *ngIf=\\\"item.status == 'Ready'\\\">Ready</ion-label>\\n                <ion-label color=\\\"warning\\\" style=\\\"font-size: 13px;\\\" *ngIf=\\\"item.status == 'open'\\\">Open</ion-label>\\n                <ion-label color=\\\"success\\\" style=\\\"font-size: 13px;\\\" *ngIf=\\\"item.Complete == 'True'\\\">Complete</ion-label>\\n                <ion-label style=\\\"float: right; font-size: 13px;\\\" color=\\\"primary\\\">{{item.OrderID}}</ion-label><br><br>\\n                <div style=\\\"text-align:start; font-size: 13px;\\\">\\n                    Order for: <ion-label style=\\\"font-size: 13px;\\\" *ngFor=\\\"let item of item.products\\\"><b>{{item.product}}</b></ion-label> ...\\n                </div>\\n                <span style=\\\"float: left;margin-top: 20px; font-size: 13px;\\\">\\n                    <b>{{item.username}}</b>\\n                </span>\\n                <span style=\\\"float: right; bottom:0; margin-top: 20px; font-size: 13px;\\\">\\n                    <span style=\\\"font-size: 13px;\\\" class=\\\"pick\\\">{{ item.Date.toDate() | dateAgo }} </span>\\n                </span>\\n                </ion-card>\\n\\n            </div>\\n        </div>\\n    </div> \\n\\n    </ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DashboardPage } from './dashboard.page';\nimport { DateAgoPipe } from '../pipes/date-ago.pipe';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DashboardPage, DateAgoPipe]\n})\nexport class DashboardPageModule {}\n","module.exports = \".card {\\n  border-radius: 15px;\\n  text-align: center;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n  background-color: white;\\n}\\n\\nion-card {\\n  border-radius: 15px;\\n}\\n\\n.main-nav {\\n  -o-object-position: center;\\n     object-position: center;\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n}\\n\\n.loader {\\n  margin-top: 40%;\\n}\\n\\n.pick {\\n  color: var(--ion-color-success);\\n  text-transform: capitalize;\\n}\\n\\n.name {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  text-align: center;\\n}\\n\\n.top {\\n  background-color: var(--ion-color-primary);\\n}\\n\\n.body {\\n  border-radius: 20px 20px 0px 0px;\\n  background-color: var(--ion-color-light);\\n  position: fixed;\\n  overflow-y: scroll;\\n  width: 100%;\\n  bottom: 0px;\\n  top: 165px;\\n}\\n\\n.ready {\\n  background-color: #f3f3f3;\\n}\\n\\n.complete {\\n  background-color: var(--ion-color-medium);\\n}\\n\\n.active {\\n  background-color: var(--ion-color-primary);\\n  color: white;\\n  font-weight: bold;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGxhcmFzc2VtbWF4d2VsbC9EZXNrdG9wL05ld21hcmsvS3dpa19NZXJjaGFudC9zcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQucGFnZS5zY3NzIiwic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLG9CQUFBO0VBQ0EsdUJBQUE7QUNDSjs7QURFQTtFQUNJLG1CQUFBO0FDQ0o7O0FEQ0E7RUFDSSwwQkFBQTtLQUFBLHVCQUFBO0VBQ0Esc0JBQUE7S0FBQSxtQkFBQTtBQ0VKOztBREFBO0VBRUksZUFBQTtBQ0VKOztBREFBO0VBQ0ksK0JBQUE7RUFDQSwwQkFBQTtBQ0dKOztBRERBO0VBQ0ksd0JBQUE7VUFBQSx1QkFBQTtFQUNBLGtCQUFBO0FDSUo7O0FEREE7RUFDSSwwQ0FBQTtBQ0lKOztBREZBO0VBQ0ksZ0NBQUE7RUFDQSx3Q0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxXQUFBO0VBQWEsVUFBQTtBQ01qQjs7QURIQTtFQUNJLHlCQUFBO0FDTUo7O0FESkE7RUFDSSx5Q0FBQTtBQ09KOztBREpBO0VBQ0ksMENBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQ09KIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBcbn1cbmlvbi1jYXJke1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG59XG4ubWFpbi1uYXZ7XG4gICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcbn1cbi5sb2FkZXIge1xuICAgIFxuICAgIG1hcmdpbi10b3A6IDQwJTtcbn1cbi5waWNre1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyk7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG4ubmFtZXtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgXG59XG4udG9we1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbn1cbi5ib2R5e1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwcHggMHB4OyBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpOyBcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgb3ZlcmZsb3cteTpzY3JvbGw7IFxuICAgIHdpZHRoOiAxMDAlOyBcbiAgICBib3R0b206IDBweDsgdG9wOiAxNjVweDtcbiAgICBcbn1cbi5yZWFkeXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xufVxuLmNvbXBsZXRle1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xufVxuXG4uYWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iLCIuY2FyZCB7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuaW9uLWNhcmQge1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG4ubWFpbi1uYXYge1xuICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbn1cblxuLmxvYWRlciB7XG4gIG1hcmdpbi10b3A6IDQwJTtcbn1cblxuLnBpY2sge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MpO1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLm5hbWUge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udG9wIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xufVxuXG4uYm9keSB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwcHggMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHQpO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogMHB4O1xuICB0b3A6IDE2NXB4O1xufVxuXG4ucmVhZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xufVxuXG4uY29tcGxldGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcbn1cblxuLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { FirestoreService } from '../services/firestore.service';\nimport { IonSlides, ModalController } from '@ionic/angular';\nimport { DatabaseService } from '../database.service';\nimport { Order } from '../models/order';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.page.html',\n    styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n    @ViewChild('slide',{static:false}) slides: IonSlides;\n    // variables\n    Myorders = [];\n    readyOrders = [];\n    filterOrder;\n    searchTerm;\n    date: Date;\n    shopname;\n    userID;\n    login = false;\n    loader = true;\n    search = false;\n    inputSearch = false;\n    count = 0;\n    DeliveryOrders: Order[] = [];\n    PickPayOrders: Order[] = [];\n    active = \"Deliveries\";\n    Deliverycount = 0;\n    PickPayCount = 0;\n    customPickerOptions: any;\n    slideOptions = {\n        initialSlide:0,\n        slidesPerView: 7,\n    };\n    deliveryInitialData: Order[] = [];\n    pickPayInitialData: Order[] = [];\n    currentMonth: any;\n    currentYear: any;\n    months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    days   = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    daysOfCurrentMonth = [];\n    currentDay: any;\n    allOrd = false ;\n\n    constructor(\n        private fs: AngularFirestore,\n        private navCtrl: Router,\n        private service: FirestoreService,\n        private modal: ModalController,\n        private db: DatabaseService,\n    ) {\n        this.service.hiddenTabs = false;\n\n        this.customPickerOptions = {\n            buttons: [\n                {\n                    text: 'Cancel',\n                    handler: () => {\n                        console.log('Clicked Log. Do not Dismiss.');\n                        return true;\n                    }\n                },\n                {\n                    text: 'This month',\n                    handler: (res) => {\n                        this.DeliveryOrders = this.deliveryInitialData;\n                        this.PickPayOrders = this.pickPayInitialData;\n                    }\n                },\n                {\n                    text: 'Done',\n                    handler: (res) => {\n                        let newDate = Number(res.day.text);\n                        console.log(newDate);\n                        this.formatDate(newDate)\n                    }\n                }\n            ]\n        }\n    }\n\n    // GET DAYS OF THE CURRENT MONTH\n    getDaysOfTheCurrentMonth() {\n        let totalDays = this.extractDays(this.date.getMonth(), this.date.getFullYear());\n\n        console.log(\"======= GET TOTAL DAYS ======\");\n        console.log(totalDays);\n\n        for (var i = 1; i < totalDays+1; i++) {\n            let element = {day:i};\n            this.daysOfCurrentMonth.push(element);\n        }\n    }\n    \n\n    // EXTRACT DAYS \n    extractDays(month, year) {\n        return new Date(year, month+1, 0).getDate();\n    }\n\n    getDay(y, m, d) {  \n        if(d === this.currentDay){\n            this.slides.slideTo(d-1,500);\n        }\n        // let days = ['Sunday','Monday','Tuesday', 'Wednesday','Thursday','Friday','Saturday']; \n        let day = new Date(y, m, d); \n        return d && this.days[day.getDay()];\n    }\n\n    // RETURN NAME\n    returnName(date) {\n        return this.days[date];\n    }\n\n    // scroll events\n    onScroll(event) {\n        if (event.detail.scrollTop === 148) {\n            this.inputSearch = true;\n        } else {\n            this.inputSearch = false;\n        }\n    }\n    // ionviewwill enter function\n    ionViewWillEnter() {\n        this.getShop();\n        this.date = new Date();\n        this.currentYear  = this.date.getFullYear();\n        this.currentMonth = this.months[this.date.getMonth()];\n        this.currentDay   = this.date.getDate();\n        console.log(\"============ GET DAY =======\");\n        console.log(this.currentDay);\n        console.log(this.date.getDate());\n        console.log(\"=========== END GET DAY =======\");\n\n        this.getDaysOfTheCurrentMonth();\n        console.log(\"=========== DAYS OF THE CURRENT MONTH  =======\");\n        console.log(this.daysOfCurrentMonth);\n    }\n\n    changeCategory(event) {\n        if (event.detail.value === 'delivery') {\n            this.active = \"Deliveries\";\n        }\n        if (event.detail.value === \"pick&pay\") {\n            this.active = \"PickPay\";\n        }\n    }\n    \n    getCount() {\n        return this.count;\n    }\n\n    // oninit method\n    ngOnInit() {\n        this.userID = localStorage.getItem('user');\n        console.log(this.userID);\n        if (this.userID != null) {\n            // this.getOrders();\n        } else {\n            this.login = true;\n        }\n        this.service.shopFirst();\n    }\n\n    // show searchbar\n    showsearch() {\n        if (this.search === false) {\n            this.search = true;\n        } else {\n            this.search = false;\n        }\n    }\n    // filter searchbar\n    setFilteredItems() {\n        if (this.searchTerm !== null || this.searchTerm !== '') {\n            this.DeliveryOrders = this.filterItems();\n            this.PickPayOrders = this.filterItems();\n            console.log(this.Myorders);\n        }\n    }\n    filterItems() {\n        return this.filterOrder.filter(item => {\n            return item.OrderID.toLowerCase().indexOf(this.searchTerm.toLowerCase()) > -1;\n        });\n    }\n\n\n    // to sales page\n    sales() {\n        this.service.hiddenTabs = true;\n        this.navCtrl.navigate(['tabs/sales']);\n    }\n    // to stock page\n    stock() {\n        this.service.hiddenTabs = true;\n        this.navCtrl.navigate(['tabs/stock']);\n    }\n    // to orders stats page\n    orders() {\n        this.service.hiddenTabs = true;\n        this.navCtrl.navigate(['tabs/order-stats']);\n    }\n\n    // count unprepared orders of the day\n\n    // get the shop name\n    async getShop() {\n        this.shopname = localStorage.getItem('shop');\n        console.log(this.shopname);\n        this.getOrders();\n    }\n    // get orders from firestore\n    getOrders() {\n        this.service.getTodaysOrders(this.shopname).valueChanges().subscribe(res => {\n            this.Myorders = res;\n            this.filterOrder = res;\n\n            console.log(\"======================\");\n            console.log(this.Myorders);\n            console.log(\"=======================\");\n\n\n            this.filterDelivery();\n            this.filterPickPay();\n            this.formatDate(this.date.getDate());\n            this.loader = false;\n        });\n    }\n    sortDeliveryOrders() {\n        return this.DeliveryOrders.sort((a, b) => {\n            if (a.status === 'open' ) { return -1 } else { return 1 }\n        })\n    }\n\n    sortPickPayOrders() {\n        return this.PickPayOrders.sort((a, b) => {\n            if (a.status === 'open') { return -1 } else { return 1 }\n        })\n    }\n\n\n\n    // view order\n    openOrder(item) {\n        console.log(item);\n        this.service.setItems(item);\n        this.service.hiddenTabs = true;\n        this.navCtrl.navigate(['tabs/orders']);\n    }\n    \n    // filter delivery orders\n    filterDelivery() {\n        // get orders for delivery from this.Myorders\n        this.DeliveryOrders = this.filter('deliver');\n        console.log('delivery orders',this.DeliveryOrders);\n        this.deliveryInitialData = this.DeliveryOrders;\n\n        // filter them to current month\n        this.DeliveryOrders = this.filterOrdersToCurrentMonth();\n        console.log(\"==== This month Orders ====\");\n        console.log('delivery orders for this month',this.DeliveryOrders);\n\n        // sort the delivery orders for this month\n        this.DeliveryOrders = this.sortDeliveryOrders();\n        console.log('sorted delivery orders for this month',this.DeliveryOrders);\n\n        // remove the complete delivey orders for this month\n        this.removeCompleteOrders(this.DeliveryOrders);\n        console.log(\"========= final orders array list =========\");\n        console.log('delivery orders without complete orders',this.DeliveryOrders);\n        \n\n        this.Deliverycount = 0;\n        this.DeliveryOrders.forEach(item => {\n            if (item.status == 'open' && item.status == 'Ready' || item.status == 'canceled') {\n                this.Deliverycount++;\n            }\n        });\n    }\n\n    filterOrdersToCurrentMonth() {\n        return this.deliveryInitialData.filter(item => {\n            console.log( item.Date.toDate().getMonth(),this.date.getMonth())\n          return  item.Date.toDate().getMonth()===this.date.getMonth();\n        })\n    }\n\n    // FILTER PICKPAY\n    filterPickPay() {\n        // get orders for delivery from this.Myorders\n        this.PickPayOrders = this.filter('pick');\n        console.log('pick orders',this.PickPayOrders);\n        this.pickPayInitialData = this.PickPayOrders;\n\n         // filter them to current month\n        this.PickPayOrders = this.filterPickPayToCurrentMonth();\n        console.log(\"==== This month Orders ====\");\n        console.log('pick orders for this month',this.PickPayOrders);\n\n         // sort the delivery orders for this month\n        this.PickPayOrders = this.sortPickPayOrders();\n        console.log('sorted pick orders for this month',this.PickPayOrders);\n\n        // remove the complete delivey orders for this month\n        this.removeCompleteOrders(this.PickPayOrders);\n        // this.pickPayInitialData = this.PickPayOrders;\n        console.log(\"========= final orders array list =========\");\n        console.log('pick orders without complete orders',this.PickPayOrders);\n\n        this.PickPayCount = 0;\n        this.PickPayOrders.forEach(item => {\n            if (item.status == 'open' || item.status == 'Ready' || item.status == 'canceled') {\n                this.PickPayCount++;\n            }\n        });\n    }\n\n\n    filterPickPayToCurrentMonth() {\n        return this.pickPayInitialData.filter(item => {\n          return  item.Date.toDate().getMonth()===this.date.getMonth();\n        })\n    }\n\n    filter(check) {\n        return this.Myorders.filter(item => {\n            return item.Delivery.toLowerCase().indexOf(check.toLowerCase()) > -1;\n        });\n    }\n    updateCounts(){\n        this.Deliverycount = 0 ;\n        this.DeliveryOrders.forEach(item => {\n            if (item.status == 'open' || item.status == 'Ready' || item.status == 'canceled') {\n                this.Deliverycount++;\n            }\n        });\n        this.PickPayCount = 0\n        this.PickPayOrders.forEach(item => {\n            if (item.status == 'open' || item.status == 'Ready' || item.status == 'canceled') {\n                this.PickPayCount++;\n            }\n        });\n    }\n\n    // REMOVE COMPLETE ORDER\n    removeCompleteOrders(arr:Order[]){\n        let tempArr: Order[] = arr;\n        if(tempArr.length > 0) {\n            tempArr.forEach(item => {\n                if(item.status == 'complete') {\n                    let index = arr.indexOf(item);\n                    console.log(\"========   ARR 1 1   ======\");\n                    console.log(index);\n                    arr.splice(index, 1);\n                    console.log(\"========   ARR 1 2   ======\");\n                    console.log(arr);\n                } \n            })\n        } \n    }\n\n    // FORMAT DATE\n    formatDate(date) {\n        this.allOrd = false;\n        this.currentDay = date;\n        let delivaryTemp = this.deliveryInitialData;\n        let pickPayTemp = this.pickPayInitialData;\n        this.DeliveryOrders = this.filterByDate(date, delivaryTemp);\n        this.PickPayOrders  = this.filterByDate(date, pickPayTemp);\n        this.updateCounts();\n    }\n    allOrders(){\n        this.allOrd = true ;\n        this.filterDelivery();\n        this.filterPickPay();\n        this.updateCounts();\n    }\n\n    // FILTER BY DATE\n    filterByDate(date, arr) {\n        return arr.filter(item => {\n            return item.Date.toDate().getDate() == date;\n        })\n    }\n\n\n\n\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'dateAgo',\n    pure: true\n})\nexport class DateAgoPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        if (value) {\n            const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n            if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\n                return 'Just now';\n            const intervals = {\n                'year': 31536000,\n                'month': 2592000,\n                'week': 604800,\n                'day': 86400,\n                'hour': 3600,\n                'minute': 60,\n                'second': 1\n            };\n            let counter;\n            for (const i in intervals) {\n                counter = Math.floor(seconds / intervals[i]);\n                if (counter > 0)\n                    if (counter === 1) {\n                        return counter + ' ' + i + ' ago'; // singular (1 day ago)\n                    } else {\n                        return counter + ' ' + i + 's ago'; // plural (2 days ago)\n                    }\n            }\n        }\n        return value;\n    }\n\n}"],"sourceRoot":""}